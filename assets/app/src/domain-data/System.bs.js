// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Belt_MapInt = require("bs-platform/lib/js/belt_MapInt.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Util$ReactTemplate = require("../Util.bs.js");

function decodeSystem(json) {
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.$$int, json),
          /* name */Json_decode.field("name", Json_decode.string, json),
          /* description */Json_decode.field("description", Json_decode.string, json)
        ];
}

function decodeSystems(json) {
  return Json_decode.list(decodeSystem, json);
}

function encodeString(key, value, dict) {
  dict[key] = value;
  return dict;
}

function encodeInt(key, value, dict) {
  dict[key] = value;
  return dict;
}

function encodeDraftSystem(draftSystem) {
  return encodeString("description", draftSystem[/* description */1], encodeString("name", draftSystem[/* name */0], { }));
}

function encodeSystem(system) {
  return encodeString("description", system[/* description */2], encodeString("name", system[/* name */1], encodeInt("id", system[/* id */0], { })));
}

function getSystems() {
  return Util$ReactTemplate.JsonApi[/* get */0]("/api/systems", decodeSystems);
}

function createSystem(draftSystem) {
  var systemDict = encodeDraftSystem(draftSystem);
  var payload = { };
  payload["system"] = systemDict;
  return Util$ReactTemplate.JsonApi[/* post */1]("/api/systems", payload, decodeSystem);
}

function updateSystem(system) {
  var systemDict = encodeSystem(system);
  var payload = { };
  payload["system"] = systemDict;
  return Util$ReactTemplate.JsonApi[/* put */2]("/api/systems", payload, decodeSystem);
}

var Api = /* module */[
  /* decodeSystem */decodeSystem,
  /* decodeSystems */decodeSystems,
  /* encodeString */encodeString,
  /* encodeInt */encodeInt,
  /* encodeDraftSystem */encodeDraftSystem,
  /* encodeSystem */encodeSystem,
  /* getSystems */getSystems,
  /* createSystem */createSystem,
  /* updateSystem */updateSystem
];

function listAll(state) {
  if (state) {
    return /* Some */[$$Array.to_list(Belt_MapInt.valuesToArray(state[0]))];
  } else {
    return /* None */0;
  }
}

function getOne(state, id) {
  if (state) {
    return /* Some */[Belt_MapInt.get(state[0], id)];
  } else {
    return /* None */0;
  }
}

function reducer(action, state) {
  if (typeof action === "number") {
    return /* SideEffects */Block.__(1, [(function (self) {
                  Util$ReactTemplate.JsonApi[/* get */0]("/api/systems", decodeSystems).then((function (systems) {
                          Curry._1(self[/* send */3], /* GetSystemsSuccess */Block.__(0, [systems]));
                          return Promise.resolve(/* () */0);
                        }));
                  return /* () */0;
                })]);
  } else {
    switch (action.tag | 0) {
      case 0 : 
          return /* Update */Block.__(0, [/* Some */[Belt_MapInt.fromArray($$Array.map((function (c) {
                                  return /* tuple */[
                                          c[/* id */0],
                                          c
                                        ];
                                }), $$Array.of_list(action[0])))]]);
      case 1 : 
          var draftSystem = action[0];
          return /* SideEffects */Block.__(1, [(function (self) {
                        createSystem(draftSystem).then((function (system) {
                                Curry._1(self[/* send */3], /* CreateSystemSuccess */Block.__(2, [system]));
                                return Promise.resolve(/* () */0);
                              }));
                        return /* () */0;
                      })]);
      case 2 : 
          var system = action[0];
          var systemMap = state ? state[0] : Belt_MapInt.empty;
          return /* Update */Block.__(0, [/* Some */[Belt_MapInt.set(systemMap, system[/* id */0], system)]]);
      
    }
  }
}

var initialState = /* None */0;

exports.Api = Api;
exports.initialState = initialState;
exports.listAll = listAll;
exports.getOne = getOne;
exports.reducer = reducer;
/* Util-ReactTemplate Not a pure module */
